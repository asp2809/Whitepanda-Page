{"version":3,"sources":["components/Sidebar/SidebarItem.js","components/Sidebar/Sidebar.js","components/Header/NotificationIcon.js","components/Header/Header.js","components/NavigationWrapper/NavigationWrapper.js","components/hocs/bindNavs.js","components/common/Button.js","components/common/Card.js","components/Home/Grid.js","components/Footer/Footer.js","components/Home/Home.js","App.js","serviceWorker.js","index.js","assets/img/whitepanda-logo.png","assets/img/card-icon.png"],"names":["SidebarItemWrapper","styled","div","props","isActive","borderColor","SidebarItem","children","defaultProps","Wrapper","Sidebar","pathname","location","console","log","includes","to","size","NotificationWrapper","NotificationIcon","href","count","Header","className","src","logo","alt","notificationCount","style","color","backgroundColor","NavigationWrapper","ComposedComponent","ButtonWrapper","button","fontSize","border","borderRadius","padding","fontWeight","Button","CardWrapper","width","height","margin","imgsrc","Card","title","price","content","onClick","icon","GridWrapper","Grid","cardData","map","data","Footer","Home","App","path","exact","component","bindNavs","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.242fb270.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarItemWrapper = styled.div`\r\n  border-right: ${props =>\r\n    props.isActive ? `2px solid ${props.borderColor}` : null};\r\n  padding: 1rem 0;\r\n  text-align: center;\r\n  * {\r\n    color: ${props => (props.isActive ? `${props.borderColor}` : null)};\r\n  }\r\n`;\r\n\r\nconst SidebarItem = props => {\r\n  return <SidebarItemWrapper {...props}>{props.children}</SidebarItemWrapper>;\r\n};\r\n\r\nexport default SidebarItem;\r\n\r\nSidebarItem.propTypes = {\r\n  isActive: PropTypes.bool.isRequired,\r\n  borderColor: PropTypes.string\r\n};\r\n\r\nSidebarItem.defaultProps = {\r\n  borderColor: \"#3ebcb3\"\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FiGrid } from \"react-icons/fi\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport { FaStore } from \"react-icons/fa\";\r\nimport SidebarItem from \"./SidebarItem\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  a {\r\n    text-decoration: none;\r\n    color: #aaa;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Sidebar = props => {\r\n  const { pathname } = props.location;\r\n  console.log(pathname);\r\n  return (\r\n    <Wrapper {...props}>\r\n      <SidebarItem isActive={pathname.includes(\"/home\")}>\r\n        <Link to={{ pathname: \"/home\" }}>\r\n          <FiGrid size={25} />\r\n        </Link>\r\n      </SidebarItem>\r\n      <SidebarItem isActive={pathname.includes(\"/search\")}>\r\n        <Link to={{ pathname: \"/search\" }}>\r\n          <GoSearch size={25} />\r\n        </Link>\r\n      </SidebarItem>\r\n      <SidebarItem isActive={pathname.includes(\"/store\")}>\r\n        <Link to={{ pathname: \"/store\" }}>\r\n          <FaStore size={25} />\r\n        </Link>\r\n      </SidebarItem>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { FaRegBell } from \"react-icons/fa\";\r\nimport { Badge } from \"antd\";\r\n\r\nconst NotificationWrapper = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst NotificationIcon = props => {\r\n  return (\r\n    <NotificationWrapper {...props}>\r\n      <a href=\"#\">\r\n        <Badge count={5}>\r\n          <FaRegBell size={25} />\r\n        </Badge>\r\n      </a>\r\n    </NotificationWrapper>\r\n  );\r\n};\r\n\r\nexport default NotificationIcon;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport logo from \"../../assets/img/whitepanda-logo.png\";\r\nimport NotificationIcon from \"./NotificationIcon\";\r\nimport { Avatar } from \"antd\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 100%;\r\n  .logo {\r\n    cursor: pointer;\r\n    height: 1.5rem;\r\n    display: flex;\r\n    img {\r\n      height: 1.5rem;\r\n      width: auto;\r\n    }\r\n  }\r\n  .header-content {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    .notification {\r\n      margin-right: 1.7rem;\r\n    }\r\n    .profile {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Wrapper {...props}>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"whitepanda-logo\" />\r\n      </div>\r\n      <div className=\"header-content\">\r\n        <div className=\"notification\">\r\n          <NotificationIcon notificationCount=\"588\" />\r\n        </div>\r\n        <div className=\"profile\">\r\n          <Avatar\r\n            size=\"large\"\r\n            style={{ color: \"#fffff\", backgroundColor: \"#b3e77f\" }}\r\n          >\r\n            AB\r\n          </Avatar>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  .sidebar {\r\n    position: fixed;\r\n    left: 0;\r\n    height: 100vh;\r\n    width: 4.5rem;\r\n    box-shadow: 2px 2px 2px #ddd;\r\n    padding-top: 7rem;\r\n  }\r\n  .container {\r\n    flex: 1;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 4.5rem;\r\n    .header {\r\n      padding: 0 12rem 0 7rem;\r\n      min-height: 4rem;\r\n      box-shadow: 2px 2px 2px #ddd;\r\n      z-index: 10;\r\n    }\r\n    .content {\r\n      padding: 0 12rem 0 7rem;\r\n      background-color: #fdfdfd;\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationWrapper = props => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"sidebar\">\r\n        <Sidebar {...props} />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <Header {...props} />\r\n        </div>\r\n\r\n        <div className=\"content\">{props.children}</div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NavigationWrapper;\r\n","import React from \"react\";\r\n\r\nimport NavigationWrapper from \"../NavigationWrapper/NavigationWrapper\";\r\n\r\nexport default ComposedComponent => {\r\n  const BindNavs = props => {\r\n    return (\r\n      <NavigationWrapper {...props}>\r\n        <ComposedComponent {...props} />\r\n      </NavigationWrapper>\r\n    );\r\n  };\r\n\r\n  return BindNavs;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  font-size: ${props => props.fontSize};\r\n  background-color: ${props => props.backgroundColor};\r\n  border: ${props => props.border};\r\n  border-radius: ${props => props.borderRadius};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${props => props.color};\r\n  transition: all 0.5s;\r\n  padding: ${props => props.padding};\r\n  font-weight: ${props => props.fontWeight};\r\n  letter-spacing: 0.3px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${props => props.color};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Button = props => {\r\n  return <ButtonWrapper {...props}>{props.children}</ButtonWrapper>;\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  borderRadius: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  border: PropTypes.string,\r\n  color: PropTypes.string,\r\n  fontSize: PropTypes.string,\r\n  padding: PropTypes.string,\r\n  onClick: PropTypes.func // Should be isRequired but since its not given what to do onClick, leaving it\r\n};\r\n\r\nButton.defaultProps = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"inherit\",\r\n  border: \"1.2px solid #3ebcb3\",\r\n  color: \"#3ebcb3\",\r\n  fontSize: \"1rem\",\r\n  padding: \"0.3rem 2.5rem\",\r\n  fontWeight: \"500\"\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport icon from \"../../assets/img/card-icon.png\";\r\nimport Button from \"./Button\";\r\n\r\nconst CardWrapper = styled.div`\r\n  background-color: ${props => props.backgroundColor};\r\n  border-radius: ${props => props.borderRadius};\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n  margin: ${props => props.margin};\r\n  transition: all 0.5s;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  padding: 2.7rem;\r\n  &:hover {\r\n    box-shadow: 0 0 3rem #eee;\r\n    .card-header {\r\n      .card-logo {\r\n        background-image: none;\r\n        background-color: #3ebcb3;\r\n      }\r\n      .card-header-info {\r\n        .name {\r\n          color: #3ebcb3;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .card-header {\r\n    display: flex;\r\n    align-items: center;\r\n    .card-logo {\r\n      min-width: 4rem;\r\n      min-height: 4rem;\r\n      border-radius: 50%;\r\n      margin-right: 1.5rem;\r\n      background-image: url(${props => `${props.imgsrc}`});\r\n      background-size: contain;\r\n    }\r\n    .card-header-info {\r\n      .name {\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n        margin-bottom: 0.2rem;\r\n        line-height: 1.2rem;\r\n      }\r\n      .price {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n  }\r\n  .card-content {\r\n    font-size: 0.9rem;\r\n    opacity: 0.7;\r\n  }\r\n  .order-btn {\r\n    button {\r\n      width: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Card = props => {\r\n  return (\r\n    <CardWrapper {...props}>\r\n      <div className=\"card-header\">\r\n        <div className=\"card-logo\"></div>\r\n        <div className=\"card-header-info\">\r\n          <div className=\"name\">{props.title}</div>\r\n          <div className=\"price\">from &#8377;{props.price}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-content\">{props.content}</div>\r\n      <div className=\"order-btn\">\r\n        <Button onClick={() => null}>Order</Button>\r\n      </div>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\nCard.propTypes = {\r\n  backgroundColor: PropTypes.string,\r\n  borderRadius: PropTypes.string,\r\n  imgsrc: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  margin: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired\r\n};\r\n\r\nCard.defaultProps = {\r\n  backgroundColor: \"white\",\r\n  borderRadius: \"5px\",\r\n  imgsrc: icon,\r\n  height: \"21.5rem\",\r\n  width: \"21.5rem\",\r\n  margin: \"2rem 0\"\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../common/Card\";\r\n\r\nconst GridWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Grid = props => {\r\n  return (\r\n    <GridWrapper {...props}>\r\n      {props.cardData.map(data => (\r\n        <Card title={data.title} price={data.price} content={data.content} />\r\n      ))}\r\n    </GridWrapper>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  FaFacebookF,\r\n  FaTwitter,\r\n  FaLinkedinIn,\r\n  FaInstagram\r\n} from \"react-icons/fa\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  color: #a6a6a6;\r\n  align-items: center;\r\n  transition: all 1s;\r\n  font-size: 1rem;\r\n  margin-bottom: 2rem;\r\n  div {\r\n    text-align: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  .social-icons {\r\n    width: 30%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    svg:hover {\r\n      color: gray;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .company-links {\r\n    letter-spacing: 0.3px;\r\n    a {\r\n      text-decoration: underline;\r\n      color: inherit;\r\n      &:hover {\r\n        color: gray;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"social-icons\">\r\n        <FaTwitter size={30} />\r\n        <FaLinkedinIn size={30} />\r\n        <FaInstagram size={30} />\r\n        <FaFacebookF size={30} />\r\n      </div>\r\n      <div className=\"copyright-info\">\r\n        Copyright @ 2019 White Panda Media Pvt. Ltd. <br />\r\n        All rights reserved\r\n      </div>\r\n      <div className=\"company-links\">\r\n        <Link to=\"/\">Terms of Service</Link>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n        <Link to=\"/\">Privacy Policy</Link>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n        <Link to=\"/\">Service Agreement</Link>&nbsp;&nbsp;|&nbsp;&nbsp;\r\n        <Link to=\"/\">Contact Us</Link>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Button from \"../common/Button\";\r\nimport Grid from \"./Grid\";\r\nimport data from \"./data.json\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst Wrapper = styled.div`\r\n  font-family: \"Roboto\", sans-serif;\r\n  .heading {\r\n    font-size: 2rem;\r\n    margin: 4.5rem 0;\r\n  }\r\n  .info {\r\n    padding: 1.5rem;\r\n    background-color: #f9fbfb;\r\n    color: gray;\r\n    margin-bottom: 2rem;\r\n    .title {\r\n      color: #3ebcb3;\r\n      font-size: 1.2rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    .text {\r\n      margin-bottom: 1.5rem;\r\n      font-size: 0.9rem;\r\n      a {\r\n        text-decoration: underline;\r\n        color: inherit;\r\n      }\r\n    }\r\n  }\r\n  .cards {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nconst Home = props => {\r\n  return (\r\n    <Wrapper {...props}>\r\n      <div className=\"heading\">Content Store</div>\r\n      <div className=\"info\">\r\n        <div className=\"title\">\r\n          Got bulk orders or almost similar orders? Fill the order brief in an\r\n          excel sheet\r\n        </div>\r\n        <div className=\"text\">\r\n          If you are wondering about an easy way to place orders in large\r\n          numbers, we provide a way customized just for that.\r\n          <br /> Download our excel sheet, and fill the order brief in the\r\n          prescribed format and submit. In case you need any help,{\" \"}\r\n          <a href=\"#\">\r\n            we\r\n            <br /> are just a click away to assist you in placing your order\r\n          </a>\r\n        </div>\r\n        <Button\r\n          fontWeight=\"600\"\r\n          fontSize=\"0.9rem\"\r\n          padding=\"0.3rem 1.5rem\"\r\n          borderRadius=\"5px\"\r\n        >\r\n          Order Via Excel Sheet\r\n        </Button>\r\n      </div>\r\n      <div className=\"cards\">\r\n        <Grid cardData={data.cardData} />\r\n      </div>\r\n      <div className=\"footer\">\r\n        <Footer />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport bindNavs from \"./components/hocs/bindNavs\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        {/* <Route path=\"/\" exact render={() => <Redirect to=\"/home\" />} /> */}\r\n        <Route path=\"/\" exact component={bindNavs(Home)} />\r\n        <Route path=\"/home\" exact component={bindNavs(Home)} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/whitepanda-logo.198ac920.png\";","module.exports = __webpack_public_path__ + \"static/media/card-icon.e1823ff0.png\";"],"sourceRoot":""}